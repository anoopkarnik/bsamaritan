model Notion {
  id            String        @id @default(uuid())
  accessToken   String        @unique
  workspaceId   String        @unique
  workspaceName String
  workspaceIcon String
  User          User          @relation(fields: [userId], references: [id])
  userId        String
  connections   Connections[]
  notionDb     NotionDb?

  @@schema("connection_schema")
}

model NotionDb {
  id            String        @id @default(uuid())
  accountsDb    Json?
  transactionsDb Json?
  monthlyBudgetDb Json?
  budgetPlanDb   Json?
  financialGoalsDb Json?
  booksDb       Json?
  quickCaptureDb Json?
  areasDb       Json?
  archiveDb     Json?
  interestingDb Json?
  podcastsDb    Json?
  videosDb      Json?
  skillTreesDb   Json?
  channelsDb    Json?
  projectsDb    Json?
  blogsDb      Json?
  placeOfWorkDb Json?
  schedulerDb   Json?
  calendarDb    Json?
  eisenhowerMatrixDb Json?
  actionsDb     Json?
  timeTrackingDb Json?
  weeklyPlannerDb Json?
  socialSphereDb Json?
  passwordsDb   Json?
  journalDb     Json? 
  inventoryDb  Json?
  statusDb     Json?
  goalsDb      Json?
  rewardsDb    Json?
  punishmentsDb Json?
  notionId     String     @unique
  notion        Notion?        @relation(fields: [notionId], references: [id])

  @@schema("connection_schema")

}

model OpenAI {
  id            String   @id @default(uuid())
  apiKey        String   @unique
  User          User     @relation(fields: [userId], references: [id])
  userId        String
  connections   Connections[]

  @@schema("connection_schema")
}

model Connections {
  id               String          @id @default(uuid())
  type             String          @unique
  Notion           Notion?         @relation(fields: [notionId], references: [id])
  notionId         String?
  OpenAI           OpenAI?         @relation(fields: [openaiId], references: [id])
  openaiId         String?
  User             User?           @relation(fields: [userId], references: [id])
  userId           String?

  @@schema("connection_schema")
}